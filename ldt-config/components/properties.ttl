@prefix elmo: <http://bp4mc2.org/elmo/def#>.
@prefix html: <http://www.w3.org/1999/xhtml/vocab#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix dct: <http://purl.org/dc/terms/>.
@prefix void: <http://rdfs.org/ns/void#>.
@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>.
@prefix stage: <http://localhost:8080/modeling/stage#>.
@prefix foaf: <http://xmlns.com/foaf/0.1/>.
@prefix skos: <http://www.w3.org/2004/02/skos/core#>.
@prefix spdx: <http://spdx.org/rdf/terms#>.
@prefix adms: <http://www.w3.org/ns/adms#>.

stage:DocProperties_Catalog a elmo:Representation;
	elmo:url-pattern	"/query/doc-properties$";
  elmo:index "1";
	elmo:contains	stage:Menu;
  rdfs:seeAlso dcat:Catalog;
  elmo:query stage:DocPropertiesQuery
.
stage:DocProperties_CatalogRecord a elmo:Representation;
	elmo:url-pattern	"/query/doc-properties$";
  elmo:index "2";
	elmo:contains	stage:Menu;
  rdfs:seeAlso dcat:CatalogRecord;
  elmo:query stage:DocPropertiesQuery
.
stage:DocProperties_Dataset a elmo:Representation;
	elmo:url-pattern	"/query/doc-properties$";
  elmo:index "3";
	elmo:contains	stage:Menu;
  rdfs:seeAlso dcat:Dataset;
  elmo:query stage:DocPropertiesQuery
.
stage:DocProperties_Distribution a elmo:Representation;
	elmo:url-pattern	"/query/doc-properties$";
  elmo:index "4";
	elmo:contains	stage:Menu;
  rdfs:seeAlso dcat:Distribution;
  elmo:query stage:DocPropertiesQuery
.
stage:DocPropertiesQuery a elmo:Query;
  elmo:query '''
    prefix containerlocal: <http://localhost:8080/modeling/container/>
    prefix shxl: <http://bp4mc2.org/def/shacl-xl#>
    select ?property ?property_label ?range ?range_label ?definition
    where {
      graph <@STAGE@> {
        <@REPRESENTATION@> rdfs:seeAlso ?class
      }
      graph containerlocal:profiel {
        ?shape sh:targetClass ?class.
        ?shape sh:property ?pred.
        ?pred sh:path ?property.
        ?pred sh:name ?property_label.
        OPTIONAL {
          ?pred skos:definition ?definition
        }
        OPTIONAL {
          ?pred sh:class ?range.
          ?refshape sh:targetClass ?range.
          ?refshape sh:name ?range_label
        }
        OPTIONAL {
          ?pred shxl:index ?index
        }
      }
    }
    order by ?index
  '''
.

stage:DocPropertiesSeverity_Catalog a elmo:Representation;
  rdfs:seeAlso dcat:Catalog;
  elmo:query stage:DocPropertiesSeverityQuery
.
stage:DocPropertiesSeverity_CatalogRecord a elmo:Representation;
  rdfs:seeAlso dcat:CatalogRecord;
  elmo:query stage:DocPropertiesSeverityQuery
.
stage:DocPropertiesSeverity_Dataset a elmo:Representation;
  rdfs:seeAlso dcat:Dataset;
  elmo:query stage:DocPropertiesSeverityQuery
.
stage:DocPropertiesSeverity_Distribution a elmo:Representation;
  rdfs:seeAlso dcat:Distribution;
  elmo:query stage:DocPropertiesSeverityQuery
.
stage:DocPropertiesSeverity_Agent a elmo:Representation;
  rdfs:seeAlso foaf:Agent;
  elmo:query stage:DocPropertiesSeverityQuery
.
stage:DocPropertiesSeverity_ConceptScheme a elmo:Representation;
  rdfs:seeAlso skos:ConceptScheme;
  elmo:query stage:DocPropertiesSeverityQuery
.
stage:DocPropertiesSeverity_Concept a elmo:Representation;
  rdfs:seeAlso skos:Concept;
  elmo:query stage:DocPropertiesSeverityQuery
.
stage:DocPropertiesSeverity_Checksum a elmo:Representation;
  rdfs:seeAlso spdx:Checksum;
  elmo:query stage:DocPropertiesSeverityQuery
.
stage:DocPropertiesSeverity_Identifier a elmo:Representation;
  rdfs:seeAlso adms:Identifier;
  elmo:query stage:DocPropertiesSeverityQuery
.
stage:DocPropertiesSeverity_LicenceDocument a elmo:Representation;
  rdfs:seeAlso dct:LicenseDocument;
  elmo:query stage:DocPropertiesSeverityQuery
.
stage:DocPropertiesSeverity_PeriodOfTime a elmo:Representation;
  rdfs:seeAlso dct:PeriodOfTime;
  elmo:query stage:DocPropertiesSeverityQuery
.
stage:DocPropertiesSeverityQuery a elmo:Query;
  elmo:query '''
    prefix containerlocal: <http://localhost:8080/modeling/container/>
    prefix shxl: <http://bp4mc2.org/def/shacl-xl#>
    select distinct
           (if(?severity=sh:Violation,
               "M",
               if(?severity=sh:Warning,
                  "R",
                  if(?severity=sh:Info,
                     "O",
                     "?"
                  )
               )
            )
           ) as ?man
           ?property ?uri ?uri_label ?range ?range_label ?definition
           (if(bound(?mincount),
               if(bound(?maxcount),
                  concat(?mincount,"..",?maxcount),
                  concat(?mincount,"..n")
               ),
               if(bound(?maxcount),
                  concat("0..",?maxcount),
                  "0..n"
               )
            )
           ) as ?card
    where {
      graph <@STAGE@> {
        <@REPRESENTATION@> rdfs:seeAlso ?class
      }
      graph containerlocal:profiel {
        ?shape sh:targetClass ?class.
        ?shape sh:property ?pred.
        ?pred sh:path ?uri.
        ?pred sh:name ?uri_label.
        ?pred rdfs:label ?property.
        ?pred sh:severity ?severity.
        FILTER (lang(?property)="en")
        OPTIONAL {
          ?pred skos:definition ?definition
        }
        OPTIONAL {?pred sh:minCount ?mincount}
        OPTIONAL {?pred sh:maxCount ?maxcount}
        OPTIONAL {
          ?pred sh:class ?range.
          ?refshape sh:targetClass ?range.
          ?refshape sh:name ?range_label
        }
        BIND (
          if(?severity=sh:Violation,1,if(?severity=sh:Warning,2,3))
          as ?index
        )
      }
    }
    order by ?index ?property
  '''
.

stage:ProfielProperties	a	elmo:Representation;
	elmo:url-pattern	"/query/profiel-properties$";
	elmo:contains	stage:Menu;
  elmo:query '''
    prefix shxl: <http://bp4mc2.org/def/shacl-xl#>
    prefix containerlocal: <http://localhost:8080/modeling/container/>
    select ?nr
           (strafter(str(?shape),"#") as ?class)
           ?predicate
           ?label_nl
           (if(bound(?vocprefix),
               ?vocprefix,
               if(bound(?prefix),"?","")
            ) as ?vocabular
           )
           (replace(str(?path),"^([^ ]+)(#|/)([^ ]+)$","$3") as ?propertyname)
           (if(bound(?rcvocprefix),
               ?rcvocprefix,
               if(bound(?rcprefix),"?","")
            ) as ?vocrange
           )
           (replace(str(?refclass),"^([^ ]+)(#|/)([^ ]+)$","$3") as ?range)
           (strafter(str(?dtype),"#") as ?datatype)
           (if(bound(?mincount),
               if(bound(?maxcount),
                  concat(?mincount,"..",?maxcount),
                  concat(?mincount,"..n")
               ),
               if(bound(?maxcount),
                  concat("0..",?maxcount),
                  "0..n"
               )
            )
           ) as ?cardinality
    where {
      graph containerlocal:profiel {
        ?shape a sh:NodeShape.
        ?shape sh:property ?prop.
        ?prop sh:path ?path.
        OPTIONAL {?prop shxl:index ?nr}
        OPTIONAL {
          ?prop rdfs:label ?label_nl
          FILTER (lang(?label_nl)="nl")
        }
        ?prop rdfs:label ?predicate.
        FILTER (lang(?predicate)="en")
        BIND (replace(str(?path),"^([^ ]+)(#|/)([^#/]+)","$1$2") as ?prefix)
        OPTIONAL {
          ?voc sh:namespace ?vocnamespace.
          ?voc sh:prefix ?vocprefix
          FILTER (str(?vocnamespace) = str(?prefix))
        }
        OPTIONAL {
          ?prop sh:class ?refclass
          BIND (replace(str(?refclass),"^([^ ]+)(#|/)([^#/]+)","$1$2") as ?rcprefix)
        }
        OPTIONAL {
          ?rcvoc sh:namespace ?rcvocnamespace.
          ?rcvoc sh:prefix ?rcvocprefix
          FILTER (str(?rcvocnamespace) = str(?rcprefix))
        }
        OPTIONAL {?prop sh:datatype ?dtype}
        OPTIONAL {?prop sh:minCount ?mincount}
        OPTIONAL {?prop sh:maxCount ?maxcount}
      }
    }
    order by ?nr ?class ?predicate
  '''
.
