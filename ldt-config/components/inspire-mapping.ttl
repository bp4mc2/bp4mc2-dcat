@prefix elmo: <http://bp4mc2.org/elmo/def#>.
@prefix html: <http://www.w3.org/1999/xhtml/vocab#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix dcterms: <http://purl.org/dc/terms/>.
@prefix void: <http://rdfs.org/ns/void#>.
@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>.
@prefix stage: <http://localhost:8080/modeling/stage#>.

stage:InspireMappingDcat	a	elmo:Representation;
	elmo:url-pattern	"/query/inspire/mapping-dcat$";
  elmo:contains stage:Menu;
  elmo:fragment [
    elmo:applies-to "rule";
    elmo:name "SUBJECT";
    elmo:appearance elmo:HiddenAppearance;
  ];
  elmo:fragment [
    elmo:applies-to "usageg";
    elmo:appearance elmo:MarkdownAppearance;
  ];
  elmo:query '''
    prefix containerlocal: <http://localhost:8080/modeling/container/>
    prefix shxl: <http://bp4mc2.org/def/shacl-xl#>
    prefix dct: <http://purl.org/dc/terms/>
    select distinct ?rule ?inspire
        (group_concat(distinct ?property; separator=", ") as ?propertyg)
        (group_concat(distinct ?domain; separator=", ") as ?domaing)
        (group_concat(distinct ?range; separator=", ") as ?rangeg)
        (group_concat(distinct ?usage; separator="\\n\\n") as ?usageg)
    where {
      graph containerlocal:profiel {
        ?rule a sh:PropertyShape.
        ?rule rdfs:label ?inspire.
        FILTER (lang(?inspire)="en")
        ?rule shxl:index ?index
        FILTER EXISTS {
          ?g skos:inScheme <http://bp4mc2.org/inspire/id/scheme/Guideline>.
          ?g rdfs:seeAlso ?rule.
        }
        OPTIONAL {
          ?prop rdfs:seeAlso ?rule.
          ?prop sh:name ?property.
          ?shape sh:property ?prop.
          ?shape sh:name ?domain.
          OPTIONAL {
            ?prop skos:scopeNote ?note
          }
          OPTIONAL {
            ?prop sh:class ?refclass.
            ?refshape sh:targetClass ?refclass.
            ?refshape sh:name ?refname
          }
          OPTIONAL {
            ?prop sh:datatype ?datatype
          }
          BIND (concat(str(?refname),if(bound(?datatype),concat(" as xsd:",strafter(str(?datatype),"#")),"")) as ?range)
          BIND (if(bound(?note),concat("**",?property,"**:\\n\\n",?note),"") as ?usage)
        }
      }
    }
    group by ?index ?rule ?inspire
    order by ?index
  '''
.
